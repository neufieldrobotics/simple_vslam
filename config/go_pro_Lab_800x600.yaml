#K: 
#- [fx, 0, cx], 
#- [0, fy, cy], 
#- [0, 0, 1]])

K:
- [ 700.551256,   0.     ,  403.99533 ]
- [   0.      , 695.41896,  289.95235 ]
- [   0.      ,   0.     ,    1.0     ]

D: 
- [-0.28571128, 0.16130412, 0.00005361, -0.00014855, -0.07717838]

# Use these paths if using on an OSX system
osx_image_folder: 'data/gopro_chess_board_800x600'
#osx_masks_folder: 'data/gopro_chess_board_800x600'
#osx_ground_truth_poses: ''

# Use these paths if using on linux
linux_image_folder: 'data/gopro_chess_board_800x600'
#linux_masks_folder: ''
#linux_ground_truth_poses: ''

image_ext: 'jpg' # Extension of image files
use_masks: False # True if providing masks to mask out sections of images
masks_ext: 'png' # Extension of image masks
chessboard: False # 
# Indexes of initial images. These should have good baseline separation to enable the algorithm to initialize well
init_image_indxs: [0, 1]
# Step size between images. Since this algorithm does not have keyframe selection, we manually provide image separation for numerical stability
image_step: 1 

plot_landmarks: True  # Plot the landmarks in 3D plot (grey color)
display_candidates: True 

lowe_ratio_test_threshold: 0.8
use_RecoverPose_Filter: False
pause_every_iteration: False

use_gtsam: True
gtsam_interval: 1

use_tiling_non_max_supression: True
tiling_non_max_tile_y: 4 
tiling_non_max_tile_x: 3 

radial_non_max: True
radial_non_max_radius: 5

use_clahe: False
CLAHE_settings:
 clipLimit: 10.0
 tileGridSize: !!python/tuple [8,6]

Triangulation_settings:
 z_threshold: 400 # In units set by frame 1 and 2
 subtended_angle_threshold: .00005 # In degrees

findEssential_settings:
 prob: 0.9999
 threshold: 0.01

solvePnPRansac_settings:
  iterationsCount: 500
  reprojectionError: 0.003  # Using normalized coordinates, this is 1/width * (error in pixels) so 1/800 * 2 rounded to 0.003
  confidence: 0.9999

iSAM2_settings:
 #pose0_to_pose1_range: 1.0
 relinearizeThreshold: 0.1
 relinearizeSkip: 5
 proj_noise_val: 0.000125  # 1/800

feature_detector_type: sift
feature_descriptor_type: sift

ZERNIKE_settings:
 Nfeats: 1200
 seci: 4 
 secj: 3
 levels: 6
 ratio:  0.8334
 sigi: 2.75
 sigd: 1.0
 nmax: 8
 like_matlab: True
 lmax_nd: 3
 harris_threshold: 0.1

ORB_settings:
 WTA_K: 2
 edgeThreshold: 31
 patchSize: 31
 fastThreshold: 3
 firstLevel: 0
 nfeatures: 4800
 nlevels: 6
 scaleFactor: 1.2
 scoreType: 0

SURF_settings:
 hessianThreshold: 50
 nOctaves: 6

SIFT_settings:
 nfeatures: 1200
 nOctaveLayers: 3
 contrastThreshold: 0.01
 edgeThreshold: 20
 sigma: 1.6

#KLT_settings:
# criteria: !!python/tuple [3, 500, 0.001] #criteria = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 50, 0.03))
# maxLevel: 4
# winSize: !!python/tuple [15,15]
